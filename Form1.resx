<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABQRShgboF5z5zi//+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//nOL//5zi
        //+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v+/m+H/gJ/f
        /xAAAAAAAAAAAAAAAABYSDAgWU8w31ZLLf9XTC//ldLp/5zi//+c4v//nOL//5zi//+c4v//nOL//5zi
        //+c4v//nOL//5zi//+c4v//nOL//5zi//+d4v//nOL//5zi//+c4v//nOL//5zi//+c4v//nOL//5zi
        //+c4v//neL/35ff/yAAAAAAUFAwEFVJLd9USyz/U0gp/1NKLP9xiYP/nOL//5zi//+c4v//nOL//5zi
        //+c4v//nOL//5zi//95reb/PlTA/05jxv9HXMP/T2TF/3iJ0/9GW8T/S2DF/z5UwP8+VMH/SmDF/0dd
        w/9GXMP/TmTH/0ZcxP9KX8T/QlPA3wAAAABORCaAT0Un/09HKf9RRyn/TEMl/1JQNf+X0+r/nOL//5zi
        //+c4v//nOL//5zi//+c4v//nOL//2iU3f8+PLf/lpbW/2xrx/+Uldf/X17D/yAgrP+HhtL/EhKo/z8/
        t/+MjNL/f33M/4qJ0f99fc3/d3bL/6Gi3P90c8v/ExCnYFBFKb9QRyr/TkQm/1VJLP9XTC//WU8w/3mX
        k/+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//aJTd/1pawv+JidH/c3HK/5WV1/9nZ8b/Jiav/4aG
        0f8SE6f/Pz+3/5ub1/9tbcf/fn7N/2JixP+Qj9X/kZHV/3R0yv8SEajPU0cs/1lNMP9VSi3/VUkt/1JG
        K/9USCz/WFE1/5bV7P+c4v//nOL//5zi//+c4v//nOL//5zi//9olN3/VFS//2dnxv9ra8b/b2/I/2xs
        xf89Pbb/goPO/zExsv81NLT/bm/H/1ZWv/9tbcj/Pz+4/39/zP9SUb3/Y2LD/xMSqP9TSCz/TkUo/01F
        Kf9ORCj/UEgr/1FJLP9TSS3/dZSU/5zi//+c4v//nOL//5zi//+c4v//nOL//4C26/9Qbcv/UG7L/1Bu
        zP9Ydc7/fp3b/09uzP9Qbsz/UG3L/1BtzP9Qbsv/UG3L/1Bty/9Rbcz/UW3M/1BtzP9Qbcv/UG3M/0xD
        Mf9JQin/SEAp/0dBKP9FPyj/RT8p/0xDL/9gYVT/mdr1/5zi//+c4v//nOL//5zi//+c4v//nOL//4rH
        8v92qeT/dKTi/4a/7v+Fv+7/fbLp/4/P9f98sOj/f7bq/32z6P+BuOv/g7zt/5zi//+c4v//nOL//5zi
        //+c4v//aWNc/1xVS/9LRTr/PDgt/0E7L/9gWEz/l46C/6qhlf+pztn/nOL//5zi//+c4v//nOL//5zi
        //+c4v//aZTd/0pmyf8+VML/aJLc/2aQ2v9FXcb/fbTr/1l80/9XetL/VXXQ/1+D1f9hiNj/nOL//5zi
        //+c4v//nOL//5zi//9aVk7/WFNH/1hSR/9MRj3/RkI4/0dCOf9JRj3/TEg7/2BiW/+Z3fj/nOL//5zi
        //+c4v//nOL//5zi//9ehNf/V3rQ/zxSwP94qub/e6/o/0RdxP99tOv/UnLP/2mW3f9fhtb/VHbQ/2iU
        3P+c4v//nOL//5zi//+c4v//nOL//1NPQv9OSDv/T0c7/1FJPv9RSD//SUQ6/0lFOf9KRTj/TEc7/3if
        qv+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//nOL//5fZ+v+W1/r/nOH//5zi//+c4v//l9z7/4fD
        8P+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//Z19V/2pgVv9rYFj/bGJa/29kXf9qX1f/a2BY/21h
        W/9sX1n/a2lk/5zh+/+c4v//nOL//5zi//+c4v//g73u/3mt5/98s+r/g7vu/5zh//9dg9T/dKfk/3is
        5v9/t+z/f7Xr/3yx6f+c4v//nOL//5zi//+c4v//nOL//5zi//9vY1j/bWJY/3BmW/9zaV3/cmlc/2xj
        Vv9sY1b/bWJV/29jVv9uY1j/i7G9/5zi//+c4v//nOL//5zi//9hiNj/Wn7T/0Vfxf9vnuH/l9r7/0Zf
        x/9dgdX/VXfP/0BZwv9lj9n/TWrL/5zi//+c4v//nOL//5zi//+c4v//nOL//25iVv9oXVL/a2JX/21i
        Wv9fU07/XlJN/1VKQ/9cUUj/V0tE/2BVUP9cYWD/neH9/5zi//+c4v//nOL//2mU3f9smd//Wn7T/3Ok
        4/+Z3fz/Q1zE/2SL2P9dhdb/VHPP/2+d4f9XedH/nOL//5zi//+c4v//nOL//5zi//+c4v//XFBE/19S
        Rv9pXVL/bGFZ/5SIgv+bk4v/jYJ8/4N5cf9nWlX/X1FO/01CP/9/rcH/nOL//5zi//+c4v//nOL//5zj
        //9+tun/nOP+/5zi//+c4v//nOL//5zi//+Ixe//m+H+/5zj/v+c4v//nOL//5zi//+c4v//nOL//5zi
        //9jV03/YVVM/1tOSP9ZS0b/ZFZL/3FmXP9QRT3/Rjsz/15SRv90Y1P/Z1RL/313d/+d4v7/nOL//5zi
        //+U1vn/bZrf/47M9P9ljtr/jMnz/3es5f9nktv/e7Do/2qV3v+S1Pj/icby/2CI2P+R0ff/nOL//5zi
        //+c4v//nOL//3NfUv9sXE3/fW1j/4R3bv90Z1z/Y1hO/1lQRv9fU0v/bVpN/31pV/+IcVv/iXFb/4y3
        z/+c4v//nOL//3yy6v9CW8T/a5fe/1p+0v9lkNv/TmzL/zZKvv9SctD/RWHG/4rH8/9ypeT/YIbW/3er
        5/+c4v//nOL//5zi//+c4v//fmVk/3Fabv90YFj/cmJW/09DOv83LiT/RDct/2VWSv+Hb17/iXFc/4py
        XP+KcV3/SlSo/5zi//+c4v//bpzh/05tzP9cgtX/WX7U/2WQ2/80Rbv/SWPJ/1Jxz/90o+T/ktT4/2iT
        3f9Qbsz/jMnz/5zi//+c4v//nOL//5zi//9/amH/inJd/4txXf+LcmD/emdd/11SRf9mVkb/bFhL/4hw
        Xv+Kcl7/i3Nd/4pyXv8iHp3/eKzo/5zi//+Du+3/gLjr/4C36/9vn+D/hL/u/2ya4P9+tOr/hb3u/3er
        5v+W2vv/hcDv/3aq5f+S0/f/nOL//5zi//+c4v//nOL//4tyXf+LdF3/i3Ne/410Xv+tloj/gGtc/3pn
        Wv9gT0P/b1tL/4pyX/+MdF7/jHNf/xoXo/81SL3/m+L//5zi//+c4v//nOL//4zK8/+c4v//nOL//5zi
        //+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//jXNe/410Xv+MdF7/i3Ne/5F4
        ZP+Lc1//Y1JG/2FQR/9fUEP/e2RV/4tyXv+KcmL/FBOm/xMUqP+Eve//nOL//5zi//+c4v//nOL//5zi
        //+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//nOL//5zi//+PdF//j3Rf/450
        Xv+NdV//jXVf/411X/+Gblv/hm9e/35pXP+CbFr/hWxa/4hwZP9YSYH/QziN/1BftP+c4v//nOL//5zi
        //+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//nOL//490
        X/+PdF//j3Rf/450X/+NdV//jnVe/490X/+FbVv/Z1pV/4BrWP96aFj/jnZi/492Yv+QdmL/j3Rj/5zO
        4P+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//neL+/4vI
        8v9nktz/j3Rg/491YP+PdGD/kHVh/491YP+Rdl7/kXRh/4txYP92ZFf/cl5O/35nU/+RdmL/kHZi/5B2
        Yf+Rd2H/lp2Y/5zi//+c4v//nOL//5zi//+c4v//nOL//5zi//+c4v//neH+/5nS5v+Kutz/Y4XR/zlO
        wP8gJq//ExKo/xMSqP+QdWH/kHZi/492Y/+QdmP/kHZi/5B2YP+QdWH/j3Vh/4ZsYP+IcV//i3Nf/5F4
        ZP+Rd2H/kXdg/5F3YP+Sd2L/m9Xr/5zi//+c4v//nOL//5zf+v+Zytv/l7G1/5WZk/+Th3r/kHhl/452
        Y/+Fbmj/eWRw/15Off9IPYn/NS2V/5F2Yv+Rd2P/knpk/5N6Zf+UeWT/k3hj/5N4ZP+ReGH/kHRk/450
        X/+Sd2L/k3dj/5F3Yf+SeGD/kXdh/5F2Yv+VmJL/m8LO/5ajoP+Uj4P/kHhk/5J2Yv+ReF//kXdh/5J4
        Yv+ReGP/kHhj/5F5Y/+ReWP/kHhi/5B4Y/+QeGL/kndj/5J3Y/+UemX/lHpl/5V6Zf+VeWT/k3dj/5J3
        Yf+Sd2H/k3hg/5N3Yf+Sd2P/kndh/5J4Yf+Sd2L/kndi/5J3Yv+Sd2T/kXhh/5J4YP+SdmP/kXZi/5J4
        Yf+TeGL/k3lk/5N5ZP+SeWP/knpk/5F5Y/+ReWP/kXlj/5F5Y/+TdmPPk3hk/5R4ZP+UeGT/k3hj/5R4
        Yv+UeGH/lHhg/5R4YP+TeGD/knhg/5J5Yf+SeWD/knhg/5J4YP+SeWH/knhi/5N4ZP+TeWL/k3hh/5N4
        ZP+TeWP/k3hl/5R5ZP+UeWT/lHlk/5R5ZP+Te2X/knpk/5J6ZP+SemT/k3tkv5J4YGCUeWD/lHhh/5R4
        Yf+UeGD/lHhg/5R4YP+UeGD/lHhg/5R4YP+SeGD/knhg/5J4YP+TeGL/lHll/5R5Zf+UeWT/lHlk/5R5
        ZP+VemX/lHlk/5R5ZP+UemX/lHlk/5V6Zf+TemT/k3tl/5N7Zf+SemT/k3tl/5N7Zf+RemaAAAAAAJV5
        YN+UeF//lHhg/5R4YP+UeGD/lHhg/5R5Yf+VeWL/lnlj/5V5Yv+UeWL/lHpj/5R6Zf+VemX/lXpl/5V6
        Zf+VemX/lXpl/5Z7Zv+VemX/lXpl/5Z7Zv+We2b/lntm/5R7Zf+Te2X/lHpl/5R7Zf+Te2X/lHtl349w
        YBAAAAAAj3hgIJR4YN+VeWH/lHhg/5R4YP+VeWH/lXlh/5Z4Zf+XeWb/l3pm/5Z6Zf+VemX/lntm/5Z7
        Zv+We2f/lntn/5d8Z/+We2b/lntm/5Z7Zv+XfGf/l3xn/5Z7Zv+We2b/lntm/5Z7Zv+We2b/lXtm/5R6
        Zt+PeGAgAAAAAAAAAAAAAAAAj3BgEJd6Yn+WeWG/lXlh/5V5Yv+WemT/l3pm/5h7Z/+XemX/mHxn/5d7
        Zv+XfGf/l3xn/5d8af+YfGv/mH1o/5d8Z/+XfGf/l3xn/5d8Z/+XfGf/lntm/5Z7Zv+We2b/lntm/5Z7
        Zs+VemVgAAAAAAAAAAAAAAAA4AAAA4AAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAAAAAgAAAAcAAAAc=
</value>
  </data>
</root>